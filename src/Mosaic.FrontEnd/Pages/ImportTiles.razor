@page "/import"
@using Mosaic.FrontEnd.Data
@using Mosaic.TilesApi
@using Mosaic.TileSources.Flickr
@using Mosaic.TilesApi.Models
@using System.Collections.ObjectModel
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@inject TileService tileService
@inject ILogger<UploadTiles> Logger
@inject IConfiguration config;
@inject HttpClient httpClient;

<PageTitle>Tile Manager</PageTitle>
@if (!string.IsNullOrEmpty(message))
{
    <div>@message</div>
}
else
{
    <div>Import Flickr "interesting" feed</div>
    <button @onclick="ImportInteresting">Import</button>
}

@code {
    string? message;

    private async Task ImportInteresting()
    {
        string apiKey = config["flickr:apiKey"];
        if (string.IsNullOrWhiteSpace(apiKey))
        {
            message = "flickr API key is not configured";
        }
        else
        {
            var flickrClient = new FlickrClient(httpClient, apiKey);
            var data = await flickrClient.GetTodaysInteresting();
            foreach (var item in data)
            {
                try
                {
                    var newTile = new TileCreateDto()
                        {
                            Source = "flickr",
                            SourceId = item.Id,
                            SourceData = JsonSerializer.Serialize(item),
                        };

                    var result = await tileService.AddNewTile(newTile);
                    message = message + $"\nSuccessfully imported flickr id {item.Id} as tile {result.Id}";
                }
                catch(Exception ex)
                {
                    Logger.LogError(ex, $"failed to add flickr id {item.Id} to tiles");
                }
            }
        }
    }
}
